#!/bin/zsh

# move-recent-downloads - Move recent downloads to current directory
# Author: Yuwei Liang

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Default values
DOWNLOADS_DIR="$HOME/Downloads"
COUNT=1
MINUTES=""
NEW_NAME=""

# Help function
show_help() {
    echo "Usage: move-recent-downloads [OPTIONS] [COUNT]"
    echo ""
    echo "Move the most recently downloaded files to the current directory."
    echo ""
    echo "OPTIONS:"
    echo "  -h, --help       Show this help message"
    echo "  -m, --minutes N  Move files downloaded in the last N minutes"
    echo "  -d, --downloads  Specify custom downloads directory"
    echo "  -r, --rename N   Rename the file when moving (only works with single file)"
    echo ""
    echo "ARGUMENTS:"
    echo "  COUNT           Number of recent files to move (default: 1)"
    echo ""
    echo "EXAMPLES:"
    echo "  move-recent-downloads           # Move the most recent file"
    echo "  move-recent-downloads 3         # Move the 3 most recent files"
    echo "  move-recent-downloads -m 10     # Move files from last 10 minutes"
    echo "  move-recent-downloads -r newname.txt  # Move and rename the most recent file"
    echo ""
    echo "Author: Yuwei Liang"
}

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -m|--minutes)
            MINUTES="$2"
            shift 2
            ;;
        -d|--downloads)
            DOWNLOADS_DIR="$2"
            shift 2
            ;;
        -r|--rename)
            NEW_NAME="$2"
            shift 2
            ;;
        -*)
            echo -e "${RED}Error: Unknown option $1${NC}"
            echo "Use -h or --help for usage information."
            exit 1
            ;;
        *)
            if [[ "$1" =~ ^[0-9]+$ ]]; then
                COUNT="$1"
            else
                echo -e "${RED}Error: Invalid argument '$1'. Expected a number.${NC}"
                exit 1
            fi
            shift
            ;;
    esac
done

# Check if downloads directory exists
if [[ ! -d "$DOWNLOADS_DIR" ]]; then
    echo -e "${RED}Error: Downloads directory '$DOWNLOADS_DIR' does not exist.${NC}"
    exit 1
fi

# Validate rename option is only used with single file
if [[ -n "$NEW_NAME" && "$COUNT" -ne 1 ]]; then
    echo -e "${RED}Error: Rename option (-r) can only be used when moving a single file.${NC}"
    exit 1
fi

# Get current directory
CURRENT_DIR=$(pwd)

echo -e "${BLUE}Moving recent downloads from ${DOWNLOADS_DIR} to ${CURRENT_DIR}${NC}"

# Find files based on criteria
if [[ -n "$MINUTES" ]]; then
    # Find files modified in the last N minutes
    FILES=($(find "$DOWNLOADS_DIR" -maxdepth 1 -type f -mmin -"$MINUTES" -print0 | xargs -0 ls -t))
    echo -e "${YELLOW}Looking for files downloaded in the last ${MINUTES} minutes...${NC}"
else
    # Find the N most recent files
    FILES=($(ls -t "$DOWNLOADS_DIR"/* 2>/dev/null | head -"$COUNT"))
    echo -e "${YELLOW}Looking for the ${COUNT} most recent file(s)...${NC}"
fi

# Check if any files were found
if [[ ${#FILES[@]} -eq 0 ]]; then
    if [[ -n "$MINUTES" ]]; then
        echo -e "${YELLOW}No files found downloaded in the last ${MINUTES} minutes.${NC}"
    else
        echo -e "${YELLOW}No files found in downloads directory.${NC}"
    fi
    exit 0
fi

# Move files
MOVED_COUNT=0
for file in "${FILES[@]}"; do
    if [[ -f "$file" ]]; then
        filename=$(basename "$file")
        target_name="$filename"
        
        # Use new name if specified and this is the first file
        if [[ -n "$NEW_NAME" && $MOVED_COUNT -eq 0 ]]; then
            target_name="$NEW_NAME"
        fi
        
        # Check if file already exists in current directory
        if [[ -f "$CURRENT_DIR/$target_name" ]]; then
            echo -e "${YELLOW}Warning: '$target_name' already exists in current directory. Skipping.${NC}"
            continue
        fi
        
        # Move the file (with rename if specified)
        if mv "$file" "$CURRENT_DIR/$target_name"; then
            if [[ "$filename" != "$target_name" ]]; then
                echo -e "${GREEN}✓ Moved and renamed: $filename -> $target_name${NC}"
            else
                echo -e "${GREEN}✓ Moved: $filename${NC}"
            fi
            ((MOVED_COUNT++))
        else
            echo -e "${RED}✗ Failed to move: $filename${NC}"
        fi
    fi
done

if [[ $MOVED_COUNT -gt 0 ]]; then
    echo -e "${GREEN}Successfully moved ${MOVED_COUNT} file(s).${NC}"
else
    echo -e "${YELLOW}No files were moved.${NC}"
fi